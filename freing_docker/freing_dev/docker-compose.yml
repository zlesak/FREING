services:
  gateway:
    image: nginx:1.29.2
    hostname: gateway
    container_name: gateway
    networks:
      freing_network:
        aliases:
          - auth.test
          - freing.test
          - service.freing.test
    ports:
      - "80:80"
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/nginx.conf:ro

  keycloak_web:
    image: quay.io/keycloak/keycloak:23.0.2
    hostname: keycloak_web
    container_name: keycloak-web
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://db_keycloak:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak

      KC_HOSTNAME: auth.test
      KC_HOSTNAME_PORT: 80
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false

      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true

      KC_PROXY: edge
      KC_PROXY_HEADERS: xforwarded

      KC_HTTP_PORT: 8100
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
      KC_HTTP_ENABLED: true
    command: start-dev --import-realm
    depends_on:
      - db_keycloak
      - gateway
    networks:
      - freing_network
    ports:
      - '8100:8100'
    volumes:
      - ./keycloak/freing-realm.json:/opt/keycloak/data/import/freing-realm.json:ro

  # Database services for Keycloak
  db_keycloak:
    image: postgres:17.6
    networks:
      - freing_network
    volumes:
      - postgres_data_keycloak:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak

  # Database services for backend services
  db_service_customer:
    image: postgres:17.6
    networks:
      - freing_network
    volumes:
      - postgres_data_customer:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: customer
      POSTGRES_USER: customer
      POSTGRES_PASSWORD: customer_pass

  db_service_invoice:
    image: postgres:17.6
    networks:
      - freing_network
    volumes:
      - postgres_data_invoice:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    environment:
      POSTGRES_DB: invoice
      POSTGRES_USER: invoice
      POSTGRES_PASSWORD: invoice_pass

  db_service_payment:
    image: postgres:17.6
    networks:
      - freing_network
    volumes:
      - postgres_data_payment:/var/lib/postgresql/data
    ports:
      - "5435:5432"
    environment:
      POSTGRES_DB: payment
      POSTGRES_USER: payment
      POSTGRES_PASSWORD: payment_pass

  db_service_rendering:
    image: postgres:17.6
    networks:
      - freing_network
    volumes:
      - postgres_data_rendering:/var/lib/postgresql/data
    ports:
      - "5436:5432"
    environment:
      POSTGRES_DB: rendering
      POSTGRES_USER: rendering
      POSTGRES_PASSWORD: rendering_pass

  # Backend services (built from repository using multi-stage Dockerfile)
  service_customer:
    build:
      context: ../..
      dockerfile: freing_docker/freing_dev/build_docker/backend-service.Dockerfile
      args:
        SERVICE_DIR: customer-service
    image: freing_service_customer:dev
    container_name: service-customer
    environment:
      - SERVER_PORT=8081
      - DB_HOST=db_service_customer
      - DB_PORT=5432
      - DB_NAME=customer
      - DB_USER=customer
      - DB_PASSWORD=customer_pass
    ports:
      - "8081:8081"
    networks:
      - freing_network
    depends_on:
      - keycloak_web
      - db_service_customer

  service_invoice:
    build:
      context: ../..
      dockerfile: freing_docker/freing_dev/build_docker/backend-service.Dockerfile
      args:
        SERVICE_DIR: invoice-service
    image: freing_service_invoice:dev
    container_name: service-invoice
    environment:
      - SERVER_PORT=8082
      - DB_HOST=db_service_invoice
      - DB_PORT=5432
      - DB_NAME=invoice
      - DB_USER=invoice
      - DB_PASSWORD=invoice_pass
    ports:
      - "8082:8082"
    networks:
      - freing_network
    depends_on:
      - keycloak_web
      - db_service_invoice

  service_payment:
    build:
      context: ../..
      dockerfile: freing_docker/freing_dev/build_docker/backend-service.Dockerfile
      args:
        SERVICE_DIR: payment-service
    image: freing_service_payment:dev
    container_name: service-payment
    environment:
      - SERVER_PORT=8083
      - DB_HOST=db_service_payment
      - DB_PORT=5432
      - DB_NAME=payment
      - DB_USER=payment
      - DB_PASSWORD=payment_pass
    ports:
      - "8083:8083"
    networks:
      - freing_network
    depends_on:
      - keycloak_web
      - db_service_payment

  service_rendering:
    build:
      context: ../..
      dockerfile: freing_docker/freing_dev/build_docker/backend-service.Dockerfile
      args:
        SERVICE_DIR: rendering-service
    image: freing_service_rendering:dev
    container_name: service-rendering
    environment:
      - SERVER_PORT=8084
      - DB_HOST=db_service_rendering
      - DB_PORT=5432
      - DB_NAME=rendering
      - DB_USER=rendering
      - DB_PASSWORD=rendering_pass
    ports:
      - "8084:8084"
    networks:
      - freing_network
    depends_on:
      - keycloak_web
      - db_service_rendering

  frontend:
    build:
      context: ../..
      dockerfile: freing_docker/freing_dev/build_docker/frontend.Dockerfile
    image: freing_frontend:dev
    container_name: frontend
    networks:
      - freing_network
    depends_on:
      service_invoice:
        condition: service_healthy
      service_customer:
        condition: service_healthy
      service_payment:
        condition: service_healthy
      service_rendering:
        condition: service_healthy
    ports:
      - "4100:4100"
    environment:
      - DOCKER=true

volumes:
  postgres_data_keycloak:
  postgres_data_customer:
  postgres_data_invoice:
  postgres_data_payment:
  postgres_data_rendering:

networks:
  freing_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/28