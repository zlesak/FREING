server:
  port: 8081
spring:
  application:
    name: customer-service
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:customer}
    username: ${DB_USER:customer}
    password: ${DB_PASSWORD:customer_pass}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
  flyway:
    enabled: ${FLYWAY_ENABLED:false}
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_HOST:http://auth.freing.test:8100}/realms/${KEYCLOAK_REALM:freing}
      client:
        provider:
          keycloak:
            token-uri: ${KEYCLOAK_HOST:http://auth.freing.test:8100}/realms/${KEYCLOAK_REALM:freing}/protocol/openid-connect/token
        registration:
          service-client:
            client-id: ${CUSTOMER_CLIENT_ID:customer-service}
            client-secret: ${CUSTOMER_CLIENT_SECRET:customer-secret-REPLACE_ME}
            provider: keycloak
            authorization-grant-type: client_credentials
            scope: service.call

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      probes:
        enabled: true
