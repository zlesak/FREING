server.port=8081
spring.application.name=customer-service

# Database (Postgres) configuration - works when backend runs in IDE or inside Docker
# Defaults assume the DB is reachable on localhost when running the app in the IDE.
# When running with Docker Compose, the compose file overrides DB_HOST to the DB service name.
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:customer}
spring.datasource.username=${DB_USER:customer}
spring.datasource.password=${DB_PASSWORD:customer_pass}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.maximum-pool-size=10

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

# Flyway (optional) - enable with env var FLYWAY_ENABLED=true
spring.flyway.enabled=${FLYWAY_ENABLED:false}
